# Exchange Analytics Production Crontab - 日本時間（JST）版
# 24時間基本データ取得・日次・週次レポート対応
# 継続処理システム統合版
SHELL=/bin/bash
PATH=/usr/local/bin:/usr/bin:/bin
HOME=/app

# 🔄 継続処理システム（5分間隔、平日24時間稼働）
# シンプルな5分データ取得（API制限対応）
*/5 * * * 1-5 cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 300 python scripts/cron/simple_data_fetcher.py >> /app/logs/simple_data_fetcher.log 2>&1

# 📈 日次レポート（毎日6:00 JST）
0 6 * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 120 python scripts/cron/daily_report.py >> /app/logs/daily_cron.log 2>&1

# 📊 週次統計・レポート（毎週土曜日 6:00 JST）
0 6 * * 6 cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 180 python scripts/cron/weekly_report.py >> /app/logs/weekly_cron.log 2>&1

# 🔍 システムヘルスチェック（30分間隔）
*/30 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 10 python scripts/monitoring/realtime_monitor.py --interval 1 --no-alerts >> /app/logs/health_cron.log 2>&1

# 🗑️ ログローテーション（毎日2:00 JST）
0 2 * * * cd /app/logs && find . -name "*.log" -size +10M -exec gzip {} \; && find . -name "*.gz" -mtime +7 -delete >> /app/logs/cleanup.log 2>&1

# 🔍 エラーログ監視（10分間隔）
*/10 * * * * [ -f /app/logs/simple_data_fetcher.log ] && tail -10 /app/logs/simple_data_fetcher.log | grep -i "error\|failed" && echo "$(date): Simple data fetcher errors detected" >> /app/logs/error_alert.log

# 🧪 環境変数テスト（1時間間隔、デバッグ用）
0 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 30 python tests/integration/test_env_loading.py >> /app/logs/env_test_cron.log 2>&1

# 🔍 継続処理システム健全性チェック（1時間間隔）
0 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 60 python scripts/cron/continuous_processing_cron.py --health-check-only >> /app/logs/health_check_cron.log 2>&1

# 🚀 APIサーバー自動起動（5分間隔でチェック・起動）
*/5 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 30 ./exchange-analytics api status > /dev/null 2>&1 || (timeout 60 ./exchange-analytics api start --background >> /app/logs/api_auto_start.log 2>&1)

# 📊 時間足集計システム（新規追加）
# 1時間足集計（毎時5分に実行）
5 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 60 python scripts/cron/hourly_aggregator.py >> /app/logs/hourly_aggregator.log 2>&1

# 4時間足集計（4時間ごとに実行：00:10, 04:10, 08:10, 12:10, 16:10, 20:10）
10 0,4,8,12,16,20 * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 90 python scripts/cron/four_hour_aggregator.py >> /app/logs/four_hour_aggregator.log 2>&1

# 日足集計（毎日00:15に実行）
15 0 * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 120 python scripts/cron/daily_aggregator.py >> /app/logs/daily_aggregator.log 2>&1

# 📊 差分検知付きテクニカル指標計算（1時間間隔）
0 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 600 python scripts/cron/advanced_technical/enhanced_unified_technical_calculator.py >> /app/logs/enhanced_technical_calculator.log 2>&1

# 🤖 統合AI分析（モジュール化版）- 平日8:00-6:00、金曜日は翌朝6:00まで
0 8,9,10,12,14,16,18,19,20,21,22,23,0,2,4,6 * * 1-5 cd /app && export $(cat .env | grep -v '^#' | xargs) && export PYTHONPATH=/app && timeout 180 python scripts/cron/integrated_ai_discord/main.py >> /app/logs/integrated_ai_cron.log 2>&1

# 🤖 統合AI分析（モジュール化版）- 土曜日8:00-6:00
0 8,9,10,12,14,16,18,19,20,21,22,23,0,2,4,6 * * 6 cd /app && export $(cat .env | grep -v '^#' | xargs) && export PYTHONPATH=/app && timeout 180 python scripts/cron/integrated_ai_discord/main.py >> /app/logs/integrated_ai_cron.log 2>&1

# 経済指標自動配信（平日8:00, 12:00, 18:00のみ）
0 8,12,18 * * 1-5 cd /app && export $(cat .env | grep -v '^#' | xargs) && export PYTHONPATH=/app && timeout 300 python scripts/cron/economic_indicators_discord.py >> /app/logs/economic_indicators_cron.log 2>&1

# パフォーマンス監視システムテスト（1時間間隔）
0 * * * * cd /app && export $(cat .env | grep -v "^#" | xargs) && export PYTHONPATH=/app && timeout 120 python scripts/cron/testing/performance_monitoring_test_cron.py >> /app/logs/performance_monitoring_test_cron.log 2>&1
