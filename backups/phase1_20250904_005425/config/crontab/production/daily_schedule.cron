# 日次データ取得スケジュール
# 毎日 07:00 JST に実行
# 当日の経済カレンダーデータを再取得し、更新を確認

# 日次データ取得（毎日 07:00 JST）
0 7 * * * cd /app && python -m src.application.interfaces.schedulers.daily.daily_scheduler >> /app/data/logs/scheduler/daily.log 2>&1

# 日次AI分析レポート生成（毎日 07:30 JST）
30 7 * * * cd /app && python -m src.application.use_cases.ai_report.generate_ai_report --daily >> /app/data/logs/ai_analysis/daily_reports.log 2>&1

# 日次通知送信（毎日 08:00 JST）
0 8 * * * cd /app && python -m src.application.use_cases.notification.send_notifications --daily >> /app/data/logs/notifications/daily_notifications.log 2>&1

# 日次統計レポート生成（毎日 08:30 JST）
30 8 * * * cd /app && python -m scripts/generate_daily_report.py >> /app/data/logs/reports/daily_statistics.log 2>&1

# 日次データベースバックアップ（毎日 09:00 JST）
0 9 * * * cd /app && python -m scripts/backup_database.py >> /app/data/logs/maintenance/database_backup.log 2>&1

# 日次ヘルスチェック（毎日 09:30 JST）
30 9 * * * cd /app && python -m scripts/health_check.py >> /app/data/logs/monitoring/health_check.log 2>&1

# 日次古いログファイルの削除（毎日 10:00 JST）
0 10 * * * cd /app && python -m scripts/cleanup_old_logs.py >> /app/data/logs/maintenance/log_cleanup.log 2>&1

# 日次パフォーマンス監視（毎日 10:30 JST）
30 10 * * * cd /app && python -m scripts/performance_monitor.py >> /app/data/logs/monitoring/performance.log 2>&1
