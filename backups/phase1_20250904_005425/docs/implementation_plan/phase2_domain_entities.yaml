# Phase 2: ドメインエンティティ実装計画書
# 期間: 1週間
# 目的: ビジネスロジックの中核となるエンティティの実装

phase:
  name: "ドメインエンティティ実装"
  description: "ビジネスロジックの中核となるエンティティ、バリデーション、ファクトリの実装"
  duration: "1週間"
  priority: "Critical"
  dependencies: ["phase1_foundation"]

objectives:
  - "経済イベントエンティティの実装"
  - "カレンダーデータエンティティの実装"
  - "AIレポートエンティティの実装"
  - "バリデーション機能の実装"
  - "ファクトリパターンの実装"

tasks:
  economic_event_entity:
    name: "経済イベントエンティティの実装"
    description: "EconomicEventクラスとその関連機能の実装"
    estimated_hours: 6
    dependencies: []
    deliverables:
      - "src/domain/entities/economic_event/economic_event.py"
      - "src/domain/entities/economic_event/economic_event_validator.py"
      - "src/domain/entities/economic_event/economic_event_factory.py"
    acceptance_criteria:
      - "EconomicEventクラスが仕様書通りに実装されている"
      - "すべての属性に型ヒントが付与されている"
      - "バリデーション機能が正常に動作する"
      - "ファクトリメソッドが適切に実装されている"
      - "単体テストが作成されている"

  calendar_data_entity:
    name: "カレンダーデータエンティティの実装"
    description: "CalendarDataクラスとその関連機能の実装"
    estimated_hours: 4
    dependencies: ["economic_event_entity"]
    deliverables:
      - "src/domain/entities/calendar_data/calendar_data.py"
      - "src/domain/entities/calendar_data/calendar_data_validator.py"
    acceptance_criteria:
      - "CalendarDataクラスが仕様書通りに実装されている"
      - "EconomicEventとの関連が適切に定義されている"
      - "バリデーション機能が正常に動作する"
      - "単体テストが作成されている"

  ai_report_entity:
    name: "AIレポートエンティティの実装"
    description: "AIReportクラスとUSDJPYPredictionクラスの実装"
    estimated_hours: 8
    dependencies: ["economic_event_entity"]
    deliverables:
      - "src/domain/entities/ai_report/ai_report.py"
      - "src/domain/entities/ai_report/usd_jpy_prediction.py"
      - "src/domain/entities/ai_report/ai_report_validator.py"
    acceptance_criteria:
      - "AIReportクラスが仕様書通りに実装されている"
      - "USDJPYPredictionクラスが適切に実装されている"
      - "JSONB形式での保存に対応している"
      - "信頼度スコアの計算機能が実装されている"
      - "単体テストが作成されている"

  validation_framework:
    name: "バリデーションフレームワークの実装"
    description: "共通バリデーション機能とビジネスルールの実装"
    estimated_hours: 4
    dependencies: ["economic_event_entity", "calendar_data_entity", "ai_report_entity"]
    deliverables:
      - "src/utils/validation/data_validator.py"
      - "src/utils/validation/schema_validator.py"
      - "src/utils/validation/business_rule_validator.py"
    acceptance_criteria:
      - "データ型のバリデーションが正常に動作する"
      - "スキーマ検証が適切に実装されている"
      - "ビジネスルールの検証が動作する"
      - "エラーメッセージが適切に出力される"

  entity_tests:
    name: "エンティティの単体テスト実装"
    description: "すべてのエンティティに対する包括的なテストの実装"
    estimated_hours: 6
    dependencies: ["economic_event_entity", "calendar_data_entity", "ai_report_entity"]
    deliverables:
      - "tests/unit/domain/entities/economic_event/test_economic_event.py"
      - "tests/unit/domain/entities/calendar_data/test_calendar_data.py"
      - "tests/unit/domain/entities/ai_report/test_ai_report.py"
      - "tests/unit/domain/entities/ai_report/test_usd_jpy_prediction.py"
    acceptance_criteria:
      - "すべてのエンティティクラスがテストされている"
      - "バリデーション機能がテストされている"
      - "ファクトリメソッドがテストされている"
      - "エッジケースがテストされている"
      - "テストカバレッジが90%以上"

  timezone_utils:
    name: "タイムゾーン処理ユーティリティの実装"
    description: "UTC/JST変換とタイムゾーン処理の実装"
    estimated_hours: 4
    dependencies: ["economic_event_entity"]
    deliverables:
      - "src/utils/timezone/timezone_utils.py"
      - "src/utils/timezone/timezone_converter.py"
    acceptance_criteria:
      - "UTCからJSTへの変換が正常に動作する"
      - "JSTからUTCへの変換が正常に動作する"
      - "夏時間の処理が適切に実装されている"
      - "タイムゾーンエラーの処理が実装されている"
      - "単体テストが作成されている"

  constants_and_exceptions:
    name: "定数と例外クラスの実装"
    description: "アプリケーション全体で使用する定数と例外の定義"
    estimated_hours: 2
    dependencies: []
    deliverables:
      - "src/utils/common/constants.py"
      - "src/utils/common/exceptions.py"
      - "src/utils/common/decorators.py"
    acceptance_criteria:
      - "重要な定数が適切に定義されている"
      - "カスタム例外クラスが階層的に定義されている"
      - "デコレーターが適切に実装されている"
      - "ドキュメントが作成されている"

  entity_integration_tests:
    name: "エンティティ統合テストの実装"
    description: "エンティティ間の相互作用をテストする統合テスト"
    estimated_hours: 3
    dependencies: ["entity_tests", "timezone_utils"]
    deliverables:
      - "tests/integration/domain/entities/test_entity_integration.py"
    acceptance_criteria:
      - "エンティティ間の関連が正常に動作する"
      - "データ変換が適切に処理される"
      - "バリデーションの連携が動作する"
      - "エラーハンドリングが適切に動作する"

risks:
  - name: "エンティティ設計の複雑性"
    description: "エンティティ間の関係が複雑になりすぎる"
    mitigation: "段階的な実装と継続的なレビュー"
    probability: "Medium"
    impact: "Medium"

  - name: "バリデーションルールの不整合"
    description: "ビジネスルールの定義が不正確"
    mitigation: "ステークホルダーとの確認と段階的な検証"
    probability: "Medium"
    impact: "High"

  - name: "タイムゾーン処理の複雑性"
    description: "夏時間やタイムゾーン変換での問題"
    mitigation: "包括的なテストとエラーハンドリング"
    probability: "High"
    impact: "Medium"

success_criteria:
  - "すべてのエンティティが仕様書通りに実装されている"
  - "バリデーション機能が正常に動作する"
  - "単体テストのカバレッジが90%以上"
  - "タイムゾーン処理が正確に動作する"
  - "エラーハンドリングが適切に実装されている"
  - "コード品質チェックがパスする"

next_phase: "phase3_infrastructure"
