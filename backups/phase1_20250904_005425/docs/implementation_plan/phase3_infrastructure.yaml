# Phase 3: インフラストラクチャ実装計画書
# 期間: 1-2週間
# 目的: データベース、外部API、設定管理の実装

phase:
  name: "インフラストラクチャ実装"
  description: "データベース、外部APIクライアント、設定管理の実装"
  duration: "1-2週間"
  priority: "Critical"
  dependencies: ["phase2_domain_entities"]

objectives:
  - "データベースモデルとマイグレーションの実装"
  - "外部APIクライアントの実装"
  - "設定管理システムの実装"
  - "キャッシュ機能の実装"
  - "リポジトリパターンの実装"

tasks:
  database_models:
    name: "データベースモデルの実装"
    description: "SQLAlchemyモデルとマッパーの実装"
    estimated_hours: 8
    dependencies: []
    deliverables:
      - "src/infrastructure/database/models/economic_event/economic_event_model.py"
      - "src/infrastructure/database/models/economic_event/economic_event_mapper.py"
      - "src/infrastructure/database/models/calendar_data/calendar_data_model.py"
      - "src/infrastructure/database/models/calendar_data/calendar_data_mapper.py"
      - "src/infrastructure/database/models/ai_report/ai_report_model.py"
      - "src/infrastructure/database/models/ai_report/ai_report_mapper.py"
    acceptance_criteria:
      - "すべてのモデルが仕様書通りに実装されている"
      - "マッパーが適切に実装されている"
      - "リレーションシップが正しく定義されている"
      - "インデックスが適切に設定されている"
      - "単体テストが作成されている"

  database_migrations:
    name: "データベースマイグレーションの実装"
    description: "Alembicを使用したマイグレーションスクリプトの作成"
    estimated_hours: 4
    dependencies: ["database_models"]
    deliverables:
      - "src/infrastructure/database/migrations/versions/001_create_economic_events.py"
      - "src/infrastructure/database/migrations/versions/002_create_calendar_fetch_logs.py"
      - "src/infrastructure/database/migrations/versions/003_create_notification_logs.py"
      - "src/infrastructure/database/migrations/versions/004_create_ai_reports.py"
    acceptance_criteria:
      - "マイグレーションが正常に実行される"
      - "ロールバックが正常に動作する"
      - "データの整合性が保たれる"
      - "インデックスが適切に作成される"

  database_config:
    name: "データベース設定の実装"
    description: "データベース接続と設定管理の実装"
    estimated_hours: 3
    dependencies: ["database_models"]
    deliverables:
      - "src/infrastructure/config/database/database_config.py"
      - "src/infrastructure/config/database/connection_manager.py"
    acceptance_criteria:
      - "接続プールが適切に設定されている"
      - "環境別の設定が可能"
      - "接続エラーの処理が実装されている"
      - "ヘルスチェック機能が実装されている"

  sql_repositories:
    name: "SQLリポジトリの実装"
    description: "データベースアクセス層の実装"
    estimated_hours: 12
    dependencies: ["database_models", "database_config"]
    deliverables:
      - "src/infrastructure/database/repositories/sql/sql_economic_calendar_repository.py"
      - "src/infrastructure/database/repositories/sql/sql_notification_log_repository.py"
      - "src/infrastructure/database/repositories/sql/sql_ai_report_repository.py"
    acceptance_criteria:
      - "CRUD操作が正常に動作する"
      - "トランザクション管理が適切に実装されている"
      - "エラーハンドリングが実装されている"
      - "パフォーマンスが最適化されている"
      - "単体テストが作成されている"

  cache_implementation:
    name: "キャッシュ機能の実装"
    description: "Redisとメモリキャッシュの実装"
    estimated_hours: 6
    dependencies: ["database_config"]
    deliverables:
      - "src/infrastructure/database/repositories/cache/redis_cache_manager.py"
      - "src/infrastructure/database/repositories/cache/memory_cache_manager.py"
    acceptance_criteria:
      - "Redisキャッシュが正常に動作する"
      - "メモリキャッシュが正常に動作する"
      - "キャッシュの有効期限管理が実装されている"
      - "キャッシュの無効化機能が実装されている"
      - "単体テストが作成されている"

  investpy_client:
    name: "Investpyクライアントの実装"
    description: "Investpyライブラリを使用した外部APIクライアント"
    estimated_hours: 8
    dependencies: []
    deliverables:
      - "src/infrastructure/external/investpy/investpy_client.py"
      - "src/infrastructure/external/investpy/investpy_error_handler.py"
      - "src/infrastructure/external/investpy/investpy_rate_limiter.py"
    acceptance_criteria:
      - "経済カレンダーデータの取得が正常に動作する"
      - "エラーハンドリングが適切に実装されている"
      - "レート制限が実装されている"
      - "リトライ機能が実装されている"
      - "単体テストが作成されている"

  discord_client:
    name: "Discordクライアントの実装"
    description: "Discord Webhookを使用した通知クライアント"
    estimated_hours: 6
    dependencies: []
    deliverables:
      - "src/infrastructure/external/discord/discord_client.py"
      - "src/infrastructure/external/discord/discord_embed_builder.py"
      - "src/infrastructure/external/discord/discord_error_handler.py"
    acceptance_criteria:
      - "Discord通知の送信が正常に動作する"
      - "埋め込みメッセージの作成が適切に実装されている"
      - "エラーハンドリングが実装されている"
      - "レート制限の処理が実装されている"
      - "単体テストが作成されている"

  openai_client:
    name: "OpenAIクライアントの実装"
    description: "OpenAI APIを使用したAI分析クライアント"
    estimated_hours: 8
    dependencies: []
    deliverables:
      - "src/infrastructure/external/openai/openai_client.py"
      - "src/infrastructure/external/openai/openai_prompt_manager.py"
      - "src/infrastructure/external/openai/openai_error_handler.py"
    acceptance_criteria:
      - "OpenAI APIとの通信が正常に動作する"
      - "プロンプト管理が適切に実装されている"
      - "エラーハンドリングが実装されている"
      - "トークン使用量の監視が実装されている"
      - "単体テストが作成されている"

  configuration_management:
    name: "設定管理システムの実装"
    description: "アプリケーション設定の管理システム"
    estimated_hours: 6
    dependencies: []
    deliverables:
      - "src/infrastructure/config/investpy/investpy_config.py"
      - "src/infrastructure/config/investpy/timezone_config.py"
      - "src/infrastructure/config/notification/notification_config.py"
      - "src/infrastructure/config/notification/discord_config.py"
      - "src/infrastructure/config/ai_analysis/ai_analysis_config.py"
      - "src/infrastructure/config/ai_analysis/openai_config.py"
    acceptance_criteria:
      - "設定の読み込みが正常に動作する"
      - "環境変数の処理が適切に実装されている"
      - "設定のバリデーションが実装されている"
      - "設定の動的更新が可能"
      - "単体テストが作成されている"

  infrastructure_tests:
    name: "インフラストラクチャのテスト実装"
    description: "インフラストラクチャ層の包括的なテスト"
    estimated_hours: 8
    dependencies: ["sql_repositories", "investpy_client", "discord_client", "openai_client"]
    deliverables:
      - "tests/unit/infrastructure/database/test_models.py"
      - "tests/unit/infrastructure/database/test_repositories.py"
      - "tests/unit/infrastructure/external/test_investpy_client.py"
      - "tests/unit/infrastructure/external/test_discord_client.py"
      - "tests/unit/infrastructure/external/test_openai_client.py"
      - "tests/integration/infrastructure/test_database_integration.py"
    acceptance_criteria:
      - "すべてのインフラストラクチャコンポーネントがテストされている"
      - "データベース操作のテストが実装されている"
      - "外部APIのモックテストが実装されている"
      - "統合テストが実装されている"
      - "テストカバレッジが85%以上"

  performance_optimization:
    name: "パフォーマンス最適化"
    description: "データベースクエリとキャッシュの最適化"
    estimated_hours: 4
    dependencies: ["sql_repositories", "cache_implementation"]
    deliverables:
      - "クエリ最適化の実装"
      - "インデックス最適化"
      - "キャッシュ戦略の実装"
    acceptance_criteria:
      - "クエリの実行時間が改善されている"
      - "キャッシュヒット率が向上している"
      - "メモリ使用量が最適化されている"
      - "パフォーマンステストが実装されている"

risks:
  - name: "データベース設計の不備"
    description: "スキーマ設計に問題がある"
    mitigation: "段階的な実装と継続的なレビュー"
    probability: "Medium"
    impact: "High"

  - name: "外部APIの制限"
    description: "外部APIのレート制限や変更"
    mitigation: "適切なエラーハンドリングとフォールバック機能"
    probability: "High"
    impact: "Medium"

  - name: "パフォーマンス問題"
    description: "データベースクエリやキャッシュの性能問題"
    mitigation: "継続的なパフォーマンス監視と最適化"
    probability: "Medium"
    impact: "Medium"

success_criteria:
  - "データベースマイグレーションが正常に実行される"
  - "外部APIクライアントが正常に動作する"
  - "設定管理システムが適切に機能する"
  - "キャッシュ機能が正常に動作する"
  - "単体テストのカバレッジが85%以上"
  - "パフォーマンスが要件を満たしている"
  - "エラーハンドリングが適切に実装されている"

next_phase: "phase4_domain_services"
