name: 🤖 Integrated AI Currency Analysis - 24/7 Cron

on:
  schedule:
    # 統合AI相関分析 (2時間間隔、拡張市場時間 8-2)
    - cron: '0 8,10,12,14,16,18,20,22,0,2 * * 1-5'  # 平日10回実行
    # 個別テクニカル分析 (4時間間隔)  
    - cron: '0 8,12,16,20,0 * * 1-5'  # 平日5回実行
  
  # 手動実行も可能
  workflow_dispatch:

env:
  # Python設定
  PYTHON_VERSION: '3.11'
  
jobs:
  integrated-analysis:
    name: 🎯 統合AI相関分析
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 8,10,12,14,16,18,20,22,0,2 * * 1-5'
    environment: production
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        
    - name: 🔑 Setup Environment Variables
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" >> $GITHUB_ENV
        echo "YAHOO_FINANCE_API_KEY=${{ secrets.YAHOO_FINANCE_API_KEY }}" >> $GITHUB_ENV
        
    - name: 🔍 Debug Environment Variables
      run: |
        echo "🔍 環境変数確認:"
        echo "OpenAI Key exists: $(if [ -n "$OPENAI_API_KEY" ]; then echo 'YES'; else echo 'NO'; fi)"
        echo "Discord URL exists: $(if [ -n "$DISCORD_WEBHOOK_URL" ]; then echo 'YES'; else echo 'NO'; fi)"
        echo "Discord URL format: $(echo $DISCORD_WEBHOOK_URL | sed 's/webhooks\/[0-9]*\/[^\/]*/webhooks\/***\/***/')"
        
    - name: 📁 Create Logs Directory
      run: mkdir -p logs
      
    - name: 🤖 Run Integrated AI Analysis
      run: |
        echo "🚀 統合AI相関分析実行開始 $(date)"
        timeout 180 python scripts/cron/integrated_ai_discord.py || echo "Timeout or error occurred"
        echo "✅ 統合AI相関分析完了 $(date)"
        
    - name: 📊 Upload Logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: integrated-analysis-logs-${{ github.run_id }}
        path: logs/
        retention-days: 7

  technical-analysis:
    name: 📈 個別テクニカル分析
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 8,12,16,20,0 * * 1-5'
    environment: production
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        
    - name: 🔑 Setup Environment Variables
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" >> $GITHUB_ENV
        echo "YAHOO_FINANCE_API_KEY=${{ secrets.YAHOO_FINANCE_API_KEY }}" >> $GITHUB_ENV
        
    - name: 📁 Create Logs Directory
      run: mkdir -p logs
      
    - name: 📊 Run Technical Analysis
      run: |
        echo "📈 個別テクニカル分析実行開始 $(date)"
        timeout 120 python scripts/cron/real_ai_discord_v2.py USD/JPY || echo "Timeout or error occurred"
        echo "✅ 個別テクニカル分析完了 $(date)"
        
    - name: 📊 Upload Logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: technical-analysis-logs-${{ github.run_id }}
        path: logs/
        retention-days: 7

  health-check:
    name: 🔍 System Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # 手動実行時のみ
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        
    - name: 🔑 Setup Environment Variables
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" >> $GITHUB_ENV
        echo "YAHOO_FINANCE_API_KEY=${{ secrets.YAHOO_FINANCE_API_KEY }}" >> $GITHUB_ENV
        
    - name: 🧪 Test Yahoo Finance Connection
      run: |
        echo "🧪 Yahoo Finance接続テスト"
        python tests/api/test_yahoo_finance.py --test connection || echo "Yahoo Finance test failed"
        
    - name: 🧪 Test Technical Indicators
      run: |
        echo "🧪 テクニカル指標テスト"
        python tests/unit/test_technical_indicators.py || echo "Technical indicators test failed"
        
    - name: 🧪 Test Integrated Analysis
      run: |
        echo "🧪 統合分析テスト"
        python scripts/cron/integrated_ai_discord.py --test || echo "Integrated analysis test failed"
