# Exchange Analytics Production Crontab - Yahoo Finance統合版
# Yahoo Finance データソース統合・Discord配信対応
SHELL=/bin/bash
PATH=/usr/local/bin:/usr/bin:/bin
HOME=/app

# 📊 Yahoo Finance 為替レポート（30分間隔、平日市場時間）
*/30 9-17 * * 1-5 cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 60 python cron_scripts/yahoo_finance_discord.py --type rates --pairs "USD/JPY,EUR/USD,GBP/USD,AUD/USD,EUR/JPY" >> /app/logs/yahoo_discord_cron.log 2>&1

# 📈 Yahoo Finance 履歴分析（2時間間隔、平日のみ）
0 */2 9-17 * * 1-5 cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 90 python cron_scripts/yahoo_finance_discord.py --type historical --pair USD/JPY >> /app/logs/yahoo_historical_cron.log 2>&1

# 🤖 Alpha Vantage AI分析（1時間間隔、平日市場時間）- 既存機能
0 */1 9-17 * * 1-5 cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 120 python real_ai_discord.py USD/JPY >> /app/logs/ai_cron.log 2>&1

# 📊 データスケジューラーテスト（3時間間隔）
0 */3 * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 60 python data_scheduler.py --test >> /app/logs/scheduler_cron.log 2>&1

# 📈 日次レポート（毎日18:00 JST = 09:00 UTC）
0 9 * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 60 python cron_scripts/daily_report.py >> /app/logs/daily_cron.log 2>&1

# 🔍 システムヘルスチェック（30分間隔）
*/30 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 10 python realtime_monitor.py --interval 1 --no-alerts >> /app/logs/health_cron.log 2>&1

# 🌐 APIサーバー稼働確認（10分間隔）
*/10 * * * * timeout 5 curl -s http://localhost:8000/health >> /app/logs/api_health_cron.log 2>&1 || echo "$(date): API down" >> /app/logs/api_health_cron.log

# 📊 週次統計・レポート（毎週月曜日 9:00 JST = 00:00 UTC）
0 0 * * 1 cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 120 python cron_scripts/weekly_report.py >> /app/logs/weekly_cron.log 2>&1

# 🗑️ ログローテーション（毎日2:00 JST = 17:00 UTC）
0 17 * * * cd /app/logs && find . -name "*.log" -size +10M -exec gzip {} \; && find . -name "*.gz" -mtime +7 -delete >> /app/logs/cleanup.log 2>&1

# 🔍 エラーログ監視（5分間隔）
*/5 * * * * [ -f /app/logs/data_scheduler.log ] && tail -10 /app/logs/data_scheduler.log | grep -i "error\|failed" && echo "$(date): Errors detected" >> /app/logs/error_alert.log

# 🧪 環境変数テスト（30分間隔、デバッグ用）
*/30 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 30 python test_env_loading.py >> /app/logs/env_test_cron.log 2>&1

# 🌐 Yahoo Finance 接続テスト（1時間間隔）
0 * * * * cd /app && export $(cat .env | grep -v '^#' | xargs) && timeout 30 python test_yahoo_finance.py --test connection >> /app/logs/yahoo_test_cron.log 2>&1
