# 旧ファイル名: phase3_todo.yaml

phase: 3
title: "低頻度パターンの微調整"
duration: "3週間"
target_detection_rate: "50% → 80%以上"
target_frequency: "月1-10回の検出"

overview:
  description: "低頻度パターン（1, 2, 6）の基準を10倍緩和し、検出率を80%以上に向上させる"
  priority: "中"
  impact: "包括的な検出システムの完成"

target_patterns:
  - pattern_id: 1
    name: "トレンド転換"
    current_frequency: "21回/月"
    target_frequency: "月1-10回の検出"
    relaxation_multiplier: 10
  - pattern_id: 2
    name: "プルバック"
    current_frequency: "0.3回/月"
    target_frequency: "月1-5回の検出"
    relaxation_multiplier: 10
  - pattern_id: 6
    name: "複合シグナル"
    current_frequency: "0.1回/月"
    target_frequency: "月1-5回の検出"
    relaxation_multiplier: 10

tasks:
  week_1:
    day_1_3:
      pattern: 1
      pattern_name: "トレンド転換"
      tasks:
        - task_id: "1-001"
          title: "トレンド転換基準パラメータの10倍緩和"
          description: "パラメータを微調整して検出感度を向上"
          file: "src/infrastructure/analysis/pattern_detectors/trend_reversal_detector.py"
          method: "__init__"
          changes:
            - parameter: "min_trend_length"
              current_value: 5
              target_value: 3
              description: "最小トレンド長を3に緩和"
            - parameter: "trend_strength_threshold"
              current_value: 0.02
              target_value: 0.01
              description: "トレンド強度閾値を2倍に緩和"
            - parameter: "cross_confirmation"
              current_value: 2
              target_value: 1
              description: "クロス確認数を1に緩和"
          status: "pending"
          priority: "high"

        - task_id: "1-002"
          title: "移動平均計算の最適化"
          description: "移動平均計算ロジックを最適化"
          file: "src/infrastructure/analysis/pattern_detectors/trend_reversal_detector.py"
          methods:
            - "_calculate_moving_averages"
            - "_detect_trend_reversal"
          changes:
            - method: "_calculate_moving_averages"
              description: "移動平均計算精度を向上"
            - method: "_detect_trend_reversal"
              description: "トレンド転換検出条件を緩和"
          status: "pending"
          priority: "high"

        - task_id: "1-003"
          title: "個別テストの実行"
          description: "調整後のパターン1の詳細テストを実行"
          file: "scripts/test/test_pattern1_detailed.py"
          test_cases:
            - "標準トレンド転換"
            - "短期トレンド転換"
            - "強烈なトレンド転換"
            - "完璧なトレンド転換"
          expected_results:
            - "全テストケースで検出成功"
            - "信頼度0.7以上"
          status: "pending"
          priority: "medium"

        - task_id: "1-004"
          title: "検出率の確認"
          description: "調整後の検出率を測定・記録"
          metrics:
            - "検出成功率"
            - "平均信頼度"
            - "処理時間"
          target_metrics:
            detection_rate: "100%"
            confidence: "0.7以上"
            processing_time: "5秒以内"
          status: "pending"
          priority: "medium"

    day_4_5:
      pattern: 2
      pattern_name: "プルバック"
      tasks:
        - task_id: "2-001"
          title: "プルバック基準パラメータの10倍緩和"
          description: "パラメータを微調整して検出感度を向上"
          file: "src/infrastructure/analysis/pattern_detectors/pullback_detector.py"
          method: "__init__"
          changes:
            - parameter: "min_pullback_depth"
              current_value: 0.05
              target_value: 0.02
              description: "最小プルバック深さを2.5倍に緩和"
            - parameter: "max_pullback_depth"
              current_value: 0.15
              target_value: 0.25
              description: "最大プルバック深さを1.7倍に拡大"
            - parameter: "min_pullback_duration"
              current_value: 3
              target_value: 2
              description: "最小プルバック期間を2に緩和"
          status: "pending"
          priority: "high"

        - task_id: "2-002"
          title: "プルバック判定の改善"
          description: "プルバック判定ロジックを最適化"
          file: "src/infrastructure/analysis/pattern_detectors/pullback_detector.py"
          methods:
            - "_detect_pullback"
            - "_validate_pullback"
          changes:
            - method: "_detect_pullback"
              description: "プルバック検出条件を緩和"
            - method: "_validate_pullback"
              description: "プルバック検証条件を緩和"
          status: "pending"
          priority: "high"

        - task_id: "2-003"
          title: "個別テストの実行"
          description: "調整後のパターン2の詳細テストを実行"
          file: "scripts/test/test_pattern2_detailed.py"
          test_cases:
            - "標準プルバック"
            - "短期プルバック"
            - "深いプルバック"
            - "完璧なプルバック"
          expected_results:
            - "全テストケースで検出成功"
            - "信頼度0.7以上"
          status: "pending"
          priority: "medium"

        - task_id: "2-004"
          title: "検出率の確認"
          description: "調整後の検出率を測定・記録"
          metrics:
            - "検出成功率"
            - "平均信頼度"
            - "処理時間"
          target_metrics:
            detection_rate: "100%"
            confidence: "0.7以上"
            processing_time: "5秒以内"
          status: "pending"
          priority: "medium"

    day_6_7:
      pattern: 6
      pattern_name: "複合シグナル"
      tasks:
        - task_id: "6-001"
          title: "複合シグナル基準パラメータの10倍緩和"
          description: "パラメータを微調整して検出感度を向上"
          file: "src/infrastructure/analysis/pattern_detectors/composite_signal_detector.py"
          method: "__init__"
          changes:
            - parameter: "rsi_threshold"
              current_value: 30
              target_value: 25
              description: "RSI閾値を25に緩和"
            - parameter: "ma_cross_threshold"
              current_value: 0.01
              target_value: 0.005
              description: "移動平均クロス閾値を2倍に緩和"
            - parameter: "confirmation_period"
              current_value: 3
              target_value: 2
              description: "確認期間を2に緩和"
          status: "pending"
          priority: "high"

        - task_id: "6-002"
          title: "複合条件の最適化"
          description: "複合条件の判定ロジックを最適化"
          file: "src/infrastructure/analysis/pattern_detectors/composite_signal_detector.py"
          methods:
            - "_detect_composite_signal"
            - "_validate_composite_conditions"
          changes:
            - method: "_detect_composite_signal"
              description: "複合シグナル検出条件を緩和"
            - method: "_validate_composite_conditions"
              description: "複合条件検証を緩和"
          status: "pending"
          priority: "high"

        - task_id: "6-003"
          title: "個別テストの実行"
          description: "調整後のパターン6の詳細テストを実行"
          file: "scripts/test/test_pattern6_detailed.py"
          test_cases:
            - "標準複合シグナル"
            - "短期複合シグナル"
            - "強烈な複合シグナル"
            - "完璧な複合シグナル"
          expected_results:
            - "全テストケースで検出成功"
            - "信頼度0.7以上"
          status: "pending"
          priority: "medium"

        - task_id: "6-004"
          title: "統合テストの実行"
          description: "Phase 3完了後の統合テストを実行"
          file: "scripts/test/test_all_patterns_integration.py"
          test_scope:
            - "全16パターンの同時検出"
            - "実際の市場データでの検証"
          expected_results:
            - "検出率80%以上（13/16パターン）"
            - "処理時間30秒以内"
            - "エラー率5%以下"
          status: "pending"
          priority: "high"

  week_2:
    day_1_3:
      title: "精度最適化と信頼度向上"
      tasks:
        - task_id: "W3-001"
          title: "信頼度の最適化"
          description: "全パターンの信頼度計算を最適化"
          files:
            - "src/infrastructure/analysis/pattern_detectors/*.py"
          optimizations:
            - "信頼度計算アルゴリズムの改善"
            - "重み付けの最適化"
            - "閾値の調整"
          status: "pending"
          priority: "high"

        - task_id: "W3-002"
          title: "特殊条件の調整"
          description: "市場状況に応じた特殊条件の調整"
          market_conditions:
            - "トレンド市場"
            - "レンジ市場"
            - "ボラティリティ市場"
          adjustments:
            - "市場状況別の閾値調整"
            - "動的パラメータ設定"
            - "適応的検出ロジック"
          status: "pending"
          priority: "medium"

        - task_id: "W3-003"
          title: "エッジケースの処理改善"
          description: "エッジケースの処理を改善"
          edge_cases:
            - "極端な価格変動"
            - "低ボラティリティ期間"
            - "データ不足期間"
          improvements:
            - "エッジケース検出の強化"
            - "適切な処理ロジック"
            - "エラーハンドリングの改善"
          status: "pending"
          priority: "medium"

    day_4_5:
      title: "包括的テストと検証"
      tasks:
        - task_id: "W3-004"
          title: "包括的テストの実行"
          description: "全パターンの包括的テストを実行"
          test_files:
            - "scripts/test/test_all_patterns_integration.py"
            - "scripts/test/test_database_market_data.py"
          test_scenarios:
            - "実際の市場データでの検証"
            - "異なる時間足での検証"
            - "エッジケースの検証"
            - "長期データでの検証"
          status: "pending"
          priority: "high"

        - task_id: "W3-005"
          title: "性能評価とレポート作成"
          description: "Phase 3の性能評価とレポートを作成"
          metrics:
            - "検出率"
            - "信頼度"
            - "処理時間"
            - "エラー率"
            - "包括性"
          report_components:
            - "性能評価レポート"
            - "改善点の特定"
            - "Phase 4への提案"
            - "最終目標達成度評価"
          status: "pending"
          priority: "medium"

  week_3:
    day_1_3:
      title: "最終調整と最適化"
      tasks:
        - task_id: "W3-006"
          title: "最終パラメータ調整"
          description: "全パターンの最終パラメータ調整"
          adjustment_scope:
            - "検出率の微調整"
            - "信頼度の最適化"
            - "処理速度の改善"
          status: "pending"
          priority: "high"

        - task_id: "W3-007"
          title: "システム全体の最適化"
          description: "システム全体の性能最適化"
          optimizations:
            - "アルゴリズムの効率化"
            - "メモリ使用量の削減"
            - "並列処理の導入"
            - "キャッシュ機能の実装"
          status: "pending"
          priority: "medium"

        - task_id: "W3-008"
          title: "ドキュメントの更新"
          description: "技術ドキュメントの更新"
          documents:
            - "API仕様書"
            - "実装仕様書"
            - "テスト仕様書"
            - "運用マニュアル"
          status: "pending"
          priority: "medium"

    day_4_7:
      title: "最終検証とPhase 3完了"
      tasks:
        - task_id: "W3-009"
          title: "最終統合テスト"
          description: "Phase 3完了前の最終統合テスト"
          test_scope:
            - "全16パターンの同時検出"
            - "実際の市場データでの検証"
            - "パフォーマンステスト"
            - "ストレステスト"
          expected_results:
            - "検出率80%以上（13/16パターン）"
            - "処理時間30秒以内"
            - "エラー率5%以下"
            - "信頼度0.7以上"
          status: "pending"
          priority: "high"

        - task_id: "W3-010"
          title: "Phase 3完了報告書作成"
          description: "Phase 3の完了報告書を作成"
          report_sections:
            - "目標達成度評価"
            - "性能評価結果"
            - "改善点と課題"
            - "Phase 4への提案"
            - "今後の展望"
          status: "pending"
          priority: "high"

success_criteria:
  detection_rate:
    target: "80%以上"
    measurement: "統合テストでの検出パターン数"
  frequency:
    target: "月1-10回"
    measurement: "実際の市場データでの月間検出回数"
  confidence:
    target: "0.7以上"
    measurement: "検出パターンの平均信頼度"
  performance:
    processing_time: "30秒以内"
    error_rate: "5%以下"
  completeness:
    target: "全パターンの検出"
    measurement: "16パターン中13パターン以上の検出"

deliverables:
  - "低頻度パターン3個の基準緩和完了"
  - "全パターンの信頼度最適化"
  - "包括的テスト結果レポート"
  - "性能評価レポート"
  - "技術ドキュメント更新"
  - "Phase 3完了報告書"

risks:
  - risk: "低頻度パターンの過度な検出"
    mitigation: "慎重な調整とテスト"
  - risk: "信頼度の低下"
    mitigation: "信頼度計算の最適化"
  - risk: "処理時間の増加"
    mitigation: "アルゴリズムの最適化"

notes:
  - "低頻度パターンは慎重に調整し、精度を重視する"
  - "全パターンのバランスを考慮した調整を行う"
  - "実際の市場データでの検証を必ず行う"
  - "Phase 1, 2の成果を活かし、一貫性を保つ"
  - "最終目標達成に向けて、段階的な改善を継続する"
